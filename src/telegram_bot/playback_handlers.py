from aiogram.filters import Command, CommandObject
from aiogram.types import Message
from main_handlers import spotify


async def play_command_handler(message: Message, command: CommandObject):
    """
    Handler for /play command.
    Fetches a track by its name or ID from Spotify and sends a 30-second preview to the user.
    """
    if not command.args:
        await message.reply(
            "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ç—Ä–µ–∫–∞, ID —Ç—Ä–µ–∫–∞ –∏–ª–∏ —ç–ø–∏–∑–æ–¥–∞. –ü—Ä–∏–º–µ—Ä: /play Imagine Dragons"
        )
        return

    query = command.args.strip()
    try:
        results = spotify.search(query, search_type="track", limit=1)
        tracks = results.get("tracks", {}).get("items", [])
        episodes = results.get("episodes", {}).get("items", [])
        print(results)
        if not tracks and not episodes:
            await message.reply("–ù–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –¥—Ä—É–≥–æ–π –∑–∞–ø—Ä–æ—Å.")
            return

        if tracks:
            track = tracks[0]
            track_name = track.get("name", "Unknown Track")
            artists = ", ".join(artist["name"] for artist in track.get("artists", []))
            preview_url = track.get("preview_url")

            if not preview_url:
                await message.reply(
                    f"–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –¥–ª—è —Ç—Ä–µ–∫–∞ '{track_name}' ({artists}) –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–æ–≥–æ –ø—Ä–µ–¥–ø—Ä–æ—Å–ª—É—à–∏–≤–∞–Ω–∏—è."
                )
                return

            audio_data = await spotify.download_preview(preview_url)

            await message.answer_audio(
                audio=audio_data,
                title=track_name,
                performer=artists,
                caption=f"üéµ {track_name}\nüë§ {artists}",
            )
            return

        if episodes:
            episode = episodes[0]
            print(episode)
            episode_name = episode.get("name", "Unknown Episode")
            preview_url = episode.get("audio_preview_url")

            if not preview_url:
                await message.reply(
                    f"–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –¥–ª—è —ç–ø–∏–∑–æ–¥–∞ '{episode_name}' –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–æ–≥–æ –ø—Ä–µ–¥–ø—Ä–æ—Å–ª—É—à–∏–≤–∞–Ω–∏—è."
                )
                return

            audio_data = await spotify.download_preview(preview_url)

            await message.answer_audio(
                audio=audio_data,
                title=episode_name,
                caption=f"üéß {episode_name}\n–ü—Ä–µ–¥–ø—Ä–æ—Å–ª—É—à–∏–≤–∞–Ω–∏–µ —ç–ø–∏–∑–æ–¥–∞.",
            )
            return
    except Exception as e:
        await message.reply(f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {e}")


def register_playback_handlers(dp):
    dp.message.register(play_command_handler, Command("play"))
